@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

<!-- Bootstrap Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<!-- Blazor Bootstrap -->
<script src="_content/Blazor.Bootstrap/blazor.bootstrap.js"></script>

@if (IsScriptLoaded)
{
    <div class="page">
        <div class="sidebar">
            <NavMenu/>
        </div>

        <main>
            <div class="top-row px-4">
                <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
            </div>

            <article class="content px-4">
                @Body
            </article>
        </main>
    </div>

    <div id="blazor-error-ui" data-nosnippet>
        An unhandled error has occurred.
        <a href="." class="reload">Reload</a>
        <span class="dismiss">ðŸ—™</span>
    </div>
}
else
{
    <div class="loading">Loading map scripts...</div>
}

@code {
    private bool IsScriptLoaded { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                // Ensure Bootstrap is loaded
                var bootstrapCheck = @"
                    if (typeof bootstrap === 'undefined') {
                        console.error('Bootstrap is not loaded!');
                    } else {
                        console.log('Bootstrap loaded successfully');
                    }";
                await JSRuntime.InvokeVoidAsync("eval", bootstrapCheck);
                
                // Initialize Blazor Bootstrap
                var initBootstrap = @"
                    if (typeof blazorBootstrap === 'undefined') {
                        window.blazorBootstrap = {};
                        console.log('Initialized blazorBootstrap');
                    }";
                await JSRuntime.InvokeVoidAsync("eval", initBootstrap);
                
                // Load the map initializer script
                await JSRuntime.InvokeVoidAsync("import", "/js/mapInitializer.js");
                
                IsScriptLoaded = true;
                StateHasChanged();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error initializing scripts: {ex.Message}");
            }
        }
    }
}