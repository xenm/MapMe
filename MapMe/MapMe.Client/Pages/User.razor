@page "/user/{username}"
@using System.Text.Json
@using MapMe.Client.Models
@using MapMe.Client.Services
@inject IJSRuntime Js
@inject NavigationManager Nav
@inject UserProfileService ProfileService
@inject ChatService ChatService

<PageTitle>@username - Profile</PageTitle>

@if (_loading)
{
    <div class="d-flex justify-content-center align-items-center" style="height: 50vh;">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <span class="ms-2">Loading user profile...</span>
    </div>
}
else if (_error != null)
{
    <div class="alert alert-danger">@_error</div>
}
else if (_userProfile == null)
{
    <div class="alert alert-info">No data found for user <strong>@username</strong>.</div>
}
else
{
    <div class="page">
        <div class="d-flex align-items-center justify-content-between flex-wrap gap-2 mb-3">
            <h1 class="mb-0">@username</h1>
            <div class="d-flex gap-2">
                <Button Color="ButtonColor.Primary" @onclick="StartChat" disabled="@_startingChat">
                    @if (_startingChat)
                    {
                        <span class="spinner-border spinner-border-sm me-1" role="status"></span>
                    }
                    else
                    {
                        <i class="bi bi-chat-dots me-1"></i>
                    }
                    Start Chat
                </Button>
                <Button Color="ButtonColor.Secondary" Outline="true" @onclick="GoBack">Back</Button>
            </div>
        </div>

        <!-- Basic Information Card -->
        <div class="card mb-3">
            <CardHeader>
                <CardTitle class="mb-0">Basic Information</CardTitle>
            </CardHeader>
            <CardBody>
                <div class="row g-3">
                    <div class="col-auto">
                        <img src="@_avatarUrl" alt="Avatar" style="width:80px;height:80px;border-radius:50%;object-fit:cover;border:1px solid #e9ecef;" />
                    </div>
                    <div class="col">
                        <div class="fw-semibold fs-5">@_userProfile.DisplayName</div>
                        @if (_userProfile.Age.HasValue || !string.IsNullOrWhiteSpace(_userProfile.Gender))
                        {
                            <div class="text-muted small">
                                @if (_userProfile.Age.HasValue)
                                {
                                    <span>@_userProfile.Age years old</span>
                                }
                                @if (_userProfile.Age.HasValue && !string.IsNullOrWhiteSpace(_userProfile.Gender))
                                {
                                    <span> â€¢ </span>
                                }
                                @if (!string.IsNullOrWhiteSpace(_userProfile.Gender))
                                {
                                    <span>@_userProfile.Gender</span>
                                }
                            </div>
                        }
                        @if (!string.IsNullOrWhiteSpace(_userProfile.Bio))
                        {
                            <div class="mt-2">@_userProfile.Bio</div>
                        }
                    </div>
                </div>
            </CardBody>
        </div>

        <!-- Dating Preferences Card -->
        @if (!string.IsNullOrWhiteSpace(_userProfile.LookingFor) || !string.IsNullOrWhiteSpace(_userProfile.RelationshipType))
        {
            <div class="card mb-3">
                <CardHeader>
                    <CardTitle class="mb-0">Dating Preferences</CardTitle>
                </CardHeader>
                <CardBody>
                    <div class="row g-3">
                        @if (!string.IsNullOrWhiteSpace(_userProfile.LookingFor))
                        {
                            <div class="col-md-6">
                                <small class="text-muted">Looking for:</small>
                                <div>@_userProfile.LookingFor</div>
                            </div>
                        }
                        @if (!string.IsNullOrWhiteSpace(_userProfile.RelationshipType))
                        {
                            <div class="col-md-6">
                                <small class="text-muted">Relationship type:</small>
                                <div>@_userProfile.RelationshipType</div>
                            </div>
                        }
                    </div>
                </CardBody>
            </div>
        }

        <!-- Personal Details Card -->
        @if (!string.IsNullOrWhiteSpace(_userProfile.Height) || !string.IsNullOrWhiteSpace(_userProfile.Location))
        {
            <div class="card mb-3">
                <CardHeader>
                    <CardTitle class="mb-0">Personal Details</CardTitle>
                </CardHeader>
                <CardBody>
                    <div class="row g-3">
                        @if (!string.IsNullOrWhiteSpace(_userProfile.Height))
                        {
                            <div class="col-md-4">
                                <small class="text-muted">Height:</small>
                                <div>@_userProfile.Height</div>
                            </div>
                        }
                        @if (!string.IsNullOrWhiteSpace(_userProfile.Location))
                        {
                            <div class="col-md-4">
                                <small class="text-muted">Location:</small>
                                <div>@_userProfile.Location</div>
                            </div>
                        }
                        @if (!string.IsNullOrWhiteSpace(_userProfile.Hometown))
                        {
                            <div class="col-md-4">
                                <small class="text-muted">Hometown:</small>
                                <div>@_userProfile.Hometown</div>
                            </div>
                        }
                    </div>
                </CardBody>
            </div>
        }

        <!-- Professional Information Card -->
        @if (!string.IsNullOrWhiteSpace(_userProfile.JobTitle) || !string.IsNullOrWhiteSpace(_userProfile.Education))
        {
            <div class="card mb-3">
                <CardHeader>
                    <CardTitle class="mb-0">Professional Information</CardTitle>
                </CardHeader>
                <CardBody>
                    <div class="row g-3">
                        @if (!string.IsNullOrWhiteSpace(_userProfile.JobTitle))
                        {
                            <div class="col-md-6">
                                <small class="text-muted">Job:</small>
                                <div>
                                    @_userProfile.JobTitle
                                    @if (!string.IsNullOrWhiteSpace(_userProfile.Company))
                                    {
                                        <span class="text-muted"> at @_userProfile.Company</span>
                                    }
                                </div>
                            </div>
                        }
                        @if (!string.IsNullOrWhiteSpace(_userProfile.Education))
                        {
                            <div class="col-md-6">
                                <small class="text-muted">Education:</small>
                                <div>@_userProfile.Education</div>
                            </div>
                        }
                    </div>
                </CardBody>
            </div>
        }

        <!-- Activity Statistics Card -->
        <div class="card mb-3">
            <CardHeader>
                <CardTitle class="mb-0">Activity Statistics</CardTitle>
            </CardHeader>
            <CardBody>
                <div class="row g-3">
                    <div class="col-md-3">
                        <div class="text-center">
                            <div class="h4 mb-0 text-primary">@_activityStats.TotalDateMarks</div>
                            <small class="text-muted">Date Marks</small>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="text-center">
                            <div class="h4 mb-0 text-success">@_activityStats.UniqueCategories</div>
                            <small class="text-muted">Categories</small>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="text-center">
                            <div class="h4 mb-0 text-info">@_activityStats.UniqueTags</div>
                            <small class="text-muted">Tags</small>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="text-center">
                            <div class="h4 mb-0 text-warning">@_activityStats.UniqueQualities</div>
                            <small class="text-muted">Qualities</small>
                        </div>
                    </div>
                </div>
                @if (_activityStats.AverageRating > 0)
                {
                    <div class="row g-3 mt-2">
                        <div class="col-md-6">
                            <div class="text-center">
                                <div class="h5 mb-0 text-warning">@_activityStats.AverageRating.ToString("F1")</div>
                                <small class="text-muted">Average Rating</small>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="text-center">
                                <div class="h5 mb-0 text-success">@_activityStats.RecommendationRate.ToString("F0")%</div>
                                <small class="text-muted">Recommendation Rate</small>
                            </div>
                        </div>
                    </div>
                }
            </CardBody>
        </div>

        <!-- Photos Card -->
        @if (_userProfile.Photos?.Count > 0)
        {
            <div class="card mb-3">
                <CardHeader>
                    <CardTitle class="mb-0">Photos (@_userProfile.Photos.Count)</CardTitle>
                </CardHeader>
                <CardBody>
                    <div class="row g-2">
                        @foreach (var photo in _userProfile.Photos.Take(12))
                        {
                            <div class="col-6 col-md-4 col-lg-3">
                                <img src="@photo.Url" alt="@photo.Caption" 
                                     @onclick="() => OpenPhotoViewer(photo.Url)"
                                     class="img-fluid rounded" 
                                     style="width:100%;height:140px;object-fit:cover;cursor:pointer;border:1px solid #e9ecef;" />
                            </div>
                        }
                    </div>
                </CardBody>
            </div>
        }

        <!-- Interests & Preferences Card -->
        @if (_userProfile.Interests?.Count > 0 || _userProfile.Hobbies?.Count > 0 || _userProfile.FavoriteCategories?.Count > 0)
        {
            <div class="card mb-3">
                <CardHeader>
                    <CardTitle class="mb-0">Interests & Preferences</CardTitle>
                </CardHeader>
                <CardBody>
                    @if (_userProfile.Interests?.Count > 0)
                    {
                        <div class="mb-3">
                            <h6 class="text-muted">Interests</h6>
                            @foreach (var interest in _userProfile.Interests)
                            {
                                <span class="badge bg-primary me-1 mb-1">@interest</span>
                            }
                        </div>
                    }
                    @if (_userProfile.Hobbies?.Count > 0)
                    {
                        <div class="mb-3">
                            <h6 class="text-muted">Hobbies</h6>
                            @foreach (var hobby in _userProfile.Hobbies)
                            {
                                <span class="badge bg-secondary me-1 mb-1">@hobby</span>
                            }
                        </div>
                    }
                    @if (_userProfile.FavoriteCategories?.Count > 0)
                    {
                        <div class="mb-3">
                            <h6 class="text-muted">Favorite Categories</h6>
                            @foreach (var category in _userProfile.FavoriteCategories)
                            {
                                <span class="badge bg-success me-1 mb-1">@category</span>
                            }
                        </div>
                    }
                </CardBody>
            </div>
        }

        <!-- Date Marks Card -->
        <div class="card">
            <CardHeader>
                <CardTitle class="mb-0">Date Marks (@_dateMarks.Count)</CardTitle>
            </CardHeader>
            <CardBody>
                @if (_dateMarks.Count > 0)
                {
                    <div class="list-group list-group-flush">
                        @foreach (var mark in _dateMarks.Take(20))
                        {
                            <div class="list-group-item px-0">
                                <div class="d-flex align-items-start">
                                    @if (!string.IsNullOrWhiteSpace(mark.PlacePhotoUrl))
                                    {
                                        <img src="@mark.PlacePhotoUrl" alt="Place" 
                                             class="me-3 rounded" 
                                             style="width:60px;height:60px;object-fit:cover;border:1px solid #e9ecef;" />
                                    }
                                    <div class="flex-grow-1">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div>
                                                @if (!string.IsNullOrWhiteSpace(mark.Url))
                                                {
                                                    <h6 class="mb-1">
                                                        <a href="@mark.Url" target="_blank" rel="noopener noreferrer" 
                                                           class="text-decoration-none text-primary">
                                                            @(mark.Name ?? "Unnamed Location")
                                                            <i class="bi bi-box-arrow-up-right ms-1" style="font-size: 0.8em;"></i>
                                                        </a>
                                                    </h6>
                                                }
                                                else
                                                {
                                                    <h6 class="mb-1">@(mark.Name ?? "Unnamed Location")</h6>
                                                }
                                                <p class="mb-1 text-muted small">@mark.Address</p>
                                                @if (!string.IsNullOrWhiteSpace(mark.Note))
                                                {
                                                    <p class="mb-1 small">@mark.Note</p>
                                                }
                                                @if (mark.Categories?.Count > 0)
                                                {
                                                    <div class="mb-1">
                                                        @foreach (var category in mark.Categories)
                                                        {
                                                            <span class="badge bg-primary me-1">@category</span>
                                                        }
                                                    </div>
                                                }
                                                @if (mark.Tags?.Count > 0)
                                                {
                                                    <div class="mb-1">
                                                        @foreach (var tag in mark.Tags)
                                                        {
                                                            <span class="badge bg-secondary me-1">#@tag</span>
                                                        }
                                                    </div>
                                                }
                                                @if (mark.Qualities?.Count > 0)
                                                {
                                                    <div class="mb-1">
                                                        @foreach (var quality in mark.Qualities)
                                                        {
                                                            <span class="badge bg-success me-1">@quality</span>
                                                        }
                                                    </div>
                                                }
                                                @if (mark.Rating > 0)
                                                {
                                                    <div class="mb-1">
                                                        @for (int i = 1; i <= 5; i++)
                                                        {
                                                            <i class="bi @(i <= mark.Rating ? "bi-star-fill" : "bi-star") text-warning"></i>
                                                        }
                                                        @if (mark.WouldRecommend == true)
                                                        {
                                                            <span class="badge bg-success ms-2">Recommended</span>
                                                        }
                                                    </div>
                                                }
                                                @if (mark.VisitDate.HasValue)
                                                {
                                                    <small class="text-muted">Visited: @mark.VisitDate.Value.ToString("MMM dd, yyyy")</small>
                                                }
                                                
                                                <!-- Message button for this Date Mark -->
                                                <div class="mt-2">
                                                    <button class="btn btn-sm btn-outline-primary" 
                                                            @onclick="() => StartChatAboutDateMark(mark)" 
                                                            disabled="@_startingChat">
                                                        @if (_startingChat)
                                                        {
                                                            <span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span>
                                                        }
                                                        else
                                                        {
                                                            <i class="bi bi-chat-dots me-1"></i>
                                                        }
                                                        Message about this place
                                                    </button>
                                                </div>
                                            </div>
                                            <small class="text-muted">@mark.CreatedAt.ToString("MMM dd, yyyy")</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    
                    @if (_dateMarks.Count > 20)
                    {
                        <div class="mt-3 text-center">
                            <small class="text-muted">Showing 20 of @_dateMarks.Count Date Marks</small>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="bi bi-geo-alt text-muted" style="font-size: 3rem;"></i>
                        <h5 class="mt-3 text-muted">No Date Marks</h5>
                        <p class="text-muted">This user hasn't created any Date Marks yet.</p>
                    </div>
                }
            </CardBody>
        </div>

        <div class="mt-3">
            <a class="btn btn-link" href="/map">Back to Map</a>
        </div>
    </div>
}

@code {
    [Parameter]
    public string? username { get; set; }

    private bool _loading = true;
    private string? _error;
    private UserProfile _userProfile = new();
    private string _avatarUrl = "/images/user-avatar.svg";
    private ActivityStatistics _activityStats = new();
    private List<DateMark> _dateMarks = new();
    private bool _startingChat = false;

    protected override async Task OnParametersSetAsync()
    {
        _loading = true;
        _error = null;
        _userProfile = new();
        _activityStats = new();
        _dateMarks = new();

        try
        {
            if (!string.IsNullOrEmpty(username))
            {
                _userProfile = await ProfileService.GetUserProfileAsync(username) ?? new UserProfile();
            }
            if (_userProfile != null)
            {
                _avatarUrl = _userProfile.Photos?.FirstOrDefault()?.Url ?? "/images/user-avatar.svg";
                var userActivityStats = await ProfileService.GetUserActivityStatsAsync(_userProfile.UserId);
                _activityStats = new ActivityStatistics
                {
                    TotalDateMarks = userActivityStats.TotalDateMarks,
                    UniqueCategories = userActivityStats.UniqueCategories,
                    UniqueTags = userActivityStats.UniqueTags,
                    UniqueQualities = userActivityStats.UniqueQualities,
                    AverageRating = userActivityStats.AverageRating,
                    RecommendationRate = userActivityStats.RecommendationRate
                };
                _dateMarks = await ProfileService.GetUserDateMarksAsync(_userProfile.UserId);
            }
            else
            {
                _error = $"User '{username}' not found.";
            }
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _loading = false;
        }
    }

    private void GoBack()
    {
        if (Nav.Uri.EndsWith($"/user/{username}", StringComparison.OrdinalIgnoreCase))
        {
            Nav.NavigateTo("/map");
        }
        else
        {
            Nav.NavigateTo("/");
        }
    }

    private void OpenPhotoViewer(string url)
    {
        try
        {
            // Open photo in new tab or implement lightbox
            Nav.NavigateTo(url, true);
        }
        catch { }
    }

    private async Task StartChat()
    {
        _startingChat = true;
        try
        {
            await ChatService.StartChatAsync(_userProfile.UserId);
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _startingChat = false;
        }
    }

    private async Task StartChatAboutDateMark(DateMark dateMark)
    {
        _startingChat = true;
        try
        {
            await ChatService.StartChatAsync(_userProfile.UserId, dateMark);
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _startingChat = false;
        }
    }
}
